# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

clear

echo ""
echo "${BLUE}Aristocrat :: Running pre-push hooks${NC}"
echo ""

# Get the current branch name
BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo "${BLUE}→${NC} Current branch: ${BRANCH}"
echo ""

# Check if pushing to main/master
if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
  echo "${YELLOW}→ You're about to push to the ${BRANCH} branch!${NC}"
  printf "${YELLOW}  Are you sure this is intentional? (y/n): ${NC}"
  
  # Use /dev/tty to read from the terminal directly
  if ! read -r CONFIRM < /dev/tty; then
    echo "${RED}❌ Unable to read input. Push cancelled for safety.${NC}"
    exit 1
  fi
  
  if [ "$CONFIRM" != "y" ] && [ "$CONFIRM" != "Y" ]; then
    echo ""
    echo "${RED}→ Push cancelled${NC}"
    echo ""
    exit 1
  else
    echo ""
    echo "${GREEN}✔ Push to ${BRANCH} confirmed${NC}"
    echo ""
  fi
  
  # Uncomment the next 2 lines if you want to prevent direct pushes to main/master
  # echo "${RED}❌ Direct pushes to ${BRANCH} are not allowed. Please use a feature branch and create a PR.${NC}"
  # exit 1
fi

# Check for secrets/sensitive data patterns
echo "${BLUE}→${NC} Scanning for potential secrets"

SECRET_PATTERNS="password|secret|token|key|api_key|private_key|credentials"
SECRET_FILES=$(git diff --cached --name-only | xargs grep -il "$SECRET_PATTERNS" 2>/dev/null | head -5)
if [ -n "$SECRET_FILES" ]; then
  echo ""
  echo "${YELLOW}→ Potential secrets found in:${NC}"
  echo "$SECRET_FILES" | sed 's/^/  - /'
  echo "${YELLOW}→ Please ensure no actual secrets are being committed${NC}"
  echo ""
fi

echo ""
echo "${GREEN}✔ Pre-push validation completed successfully!${NC}"
echo "${GREEN}✔ Ready to push to ${BRANCH}${NC}"
echo ""
